# Default values for blockscout-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Provide a name in place of blockscout-stack for `app:` labels
##
nameOverride: ""
## Provide a name to substitute for the full names of resources
##
fullnameOverride: ""
## Reference to one or more secrets to be used when pulling images
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets: []
## Blockscout configuration options. See frontend Docs
## ref: https://github.com/blockscout/frontend/blob/main/docs/ENVS.md#blockchain-parameters
##
config:
  network:
    id: 106910
    name: Defichain Classic
    shortname: cDFI
    currency:
      name: cDFI
      symbol: cDFI
      decimals: 18
      # if network uses dual token model like gnosis (in most case it should be set to false)
      dualToken: false
  account:
    enabled: false
  testnet: false
  ## If set to true will create service monitors for blockscout and stats
  ##
  prometheus:
    enabled: true






## Configuration options for backend
##
blockscout:
  enabled: true
  ## Currently only one replica is supported
  ##
  replicaCount: 1
  ## Image parametes
  ##
  image:
    repository: ghcr.io/defichain-classic/blockscout
    pullPolicy: Always
    tag: "main"
  ## Init container configuration (used to run DB migrations)
  ##
  init:
    enabled: true
    command:
      - /bin/sh
    args:
      - -c
      - bin/blockscout eval "Elixir.Explorer.ReleaseTasks.create_and_migrate()"
  ## Blockscout ENV vars
  ## ref: https://docs.blockscout.com/for-developers/information-and-settings/env-variables
  ##
  env: 
  # DOCKER_TAG: 
    BLOCKSCOUT_VERSION: reollout
    DATABASE_URL: postgresql://blockscout:catcatcat@postgresql-1702300855:5432/blockscout
    ETHEREUM_JSONRPC_HTTP_URL: http://defichain-classic-geth:7545/
    ETHEREUM_JSONRPC_TRACE_URL: http://defichain-classic-geth:7545/
    ETHEREUM_JSONRPC_WS_URL: http://defichain-classic-geth:7546/
    NETWORK: Defichain Classic
    SUBNETWORK: Mainnet
    COIN: CDFI
    COIN_NAME: Classic DFI
    PORT: 4000
    HEART_BEAT_TIMEOUT: 30
    API_V2_ENABLED: true
    CHAIN_SPEC_PATH: https://raw.githubusercontent.com/defichain-classic/core/main/spec.json

    # NAME: VALUE
  ## Set ENV vars via secret, this can be usefull for DB connection params, api keys, etc.
  ##
  envFromSecret: []
    # NAME: VALUE
  ## Command to start blockscout instance
  ##
  command:
    - /bin/sh
  args:
    - -c
    - bin/blockscout start
  ## Annotations to add to blockscout pod
  podAnnotations: {}

  podSecurityContext: {}
  ## SecurityContext holds pod-level security attributes and common container settings.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  securityContext: {}
  terminationGracePeriodSeconds: 300
  ## Liveness probe
  ##
  livenessProbe:
    enabled: true
    path: /api/v1/health/liveness
    params:
      initialDelaySeconds: 100
      periodSeconds: 100
      timeoutSeconds: 30
  ## Readiness probe
  ##
  readinessProbe:
    enabled: true
    path: /api/v1/health/readiness
    params:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 60

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    certManager: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hostname: backend.defichain-classic.com
    tls: 
      enabled: true
      secretName: backend-tls
    paths:
      - path: /api
        pathType: Prefix
      - path: /socket
        pathType: Prefix
      - path: /sitemap.xml
        pathType: Prefix
      - path: /auth/auth0
        pathType: Exact
      - path: /auth/auth0/callback
        pathType: Exact
      - path: /auth/logout
        pathType: Exact

  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi








## Configuration options for frontend
##
frontend:
  enabled: true
  ## Image parametes
  image:
    repository: ghcr.io/defichain-classic/frontend
    tag: main
    pullPolicy: Always

  replicaCount: 2

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    certManager: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hostname: chain.defichain-classic.com
    tls:
      enabled: true
      secretName: frontend-tls
    paths:
      - path: /

  resources:
    limits:
      memory: "1Gi"
      cpu: "500m"
    requests:
      memory: "256Mi"
      cpu: "250m"
  ## Liveness probe
  ##
  livenessProbe:
    enabled: true
    path: /api/healthz
    params:
      initialDelaySeconds: 100
      periodSeconds: 100
      timeoutSeconds: 30
  ## Readiness probe
  ##
  readinessProbe:
    enabled: true
    path: /api/healthz
    params:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 30
  ## Frontend ENV vars
  ## ref: https://github.com/blockscout/frontend/blob/main/docs/ENVS.md
  ##
  env: 
    NEXT_PUBLIC_APP_PROTOCOL: https
    NEXT_PUBLIC_APP_HOST: chain.defichain-classic.com
    NEXT_PUBLIC_APP_PORT: 443
    NEXT_PUBLIC_NETWORK_NAME: Defichain Classic
    NEXT_PUBLIC_NETWORK_SHORT_NAME: cDFI
    NEXT_PUBLIC_NETWORK_ID: 106910
    NEXT_PUBLIC_NETWORK_CURRENCY_NAME: cDFI
    NEXT_PUBLIC_NETWORK_CURRENCY_SYMBOL: cDFI
    NEXT_PUBLIC_NETWORK_CURRENCY_DECIMALS: 18
    NEXT_PUBLIC_NETWORK_VERIFICATION_TYPE: mining
    NEXT_PUBLIC_NETWORK_RPC_URL: https://web3.defichain-classic.com
    NEXT_PUBLIC_API_HOST: backend.defichain-classic.com
    NEXT_PUBLIC_API_PROTOCOL: https
    NEXT_PUBLIC_API_BASE_PATH: /
    NEXT_PUBLIC_HAS_BEACON_CHAIN: false
    NEXT_PUBLIC_IS_ACCOUNT_SUPPORTED: false
    NEXT_PUBLIC_AD_BANNER_PROVIDER: none
    NEXT_PUBLIC_AD_TEXT_PROVIDER: none
    NEXT_PUBLIC_NETWORK_LOGO: https://raw.githubusercontent.com/defichain-classic/frontend-configs/main/configs/network-logos/cdfi-light.svg
    NEXT_PUBLIC_NETWORK_LOGO_DARK: https://raw.githubusercontent.com/defichain-classic/frontend-configs/main/configs/network-logos/cdfi-dark.svg
  envFromSecret: []
    # NAME: VALUE
















stats:
  enabled: false
  ## Image parametes
  ##
  image:
    repository: ghcr.io/defichain-classic/stats
    tag: main
    pullPolicy: Always

  replicasCount: 1
  service:
    type: ClusterIP
    port: 80
    metricsPort: 6060

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  ## Configure ingress resource that allow you to access the stats installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hostname: chart-example-stats.local
    tls:
      enabled: false
      #secretName:
    paths:
      - path: /
        pathType: Prefix

  resources:
    limits:
      memory: "512Mi"
      cpu: 250m
    requests:
      memory: 512Mi
      cpu: 250m
  ## Files to mount to stats pod
  ##
  files:
    enabled: false
    list: {}
      # file.txt: |
      #   test
    mountPath: /tmp/path

  ## Liveness probe
  ##
  livenessProbe:
    enabled: false
    path: /health
    params:
      initialDelaySeconds: 100
      periodSeconds: 100
      timeoutSeconds: 30
  ## Readiness probe
  ##
  readinessProbe:
    enabled: false
    path: /health
    params:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 60
  ## Stats ENV vars
  ## ref: https://github.com/blockscout/blockscout-rs/tree/main/stats#env
  env: 
    NEXT_PUBLIC_APP_PROTOCOL: http
   
  envFromSecret: []
    # NAME: VALUE
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
## Node labels for blockscout-stack pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

tolerations: []

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}
